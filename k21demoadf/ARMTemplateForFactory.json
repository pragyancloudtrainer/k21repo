{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "k21demoadf"
		},
		"destBLOBStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'destBLOBStorage'"
		},
		"destSQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'destSQLDB'"
		},
		"srcSQLDB_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'srcSQLDB'"
		},
		"srcSQLDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "demoservergm.database.windows.net"
		},
		"srcSQLDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "demodb"
		},
		"srcSQLDB_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9219fbc5-d118-416c-a7ce-62948d4754f1/resourceGroups/fordemorg/providers/Microsoft.Storage/storageAccounts/foradfdemopm"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copyactivitypipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyActivityDemo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "eid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "eid",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ename",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ename",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "eage",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "eage",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "esalary",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "esalary",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "srcDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "destBLOB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcDS')]",
				"[concat(variables('factoryId'), '/datasets/destBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataFlowPIpeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dFlowActivity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "demoDFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcBLOB": {},
									"snkGT29k": {},
									"snkLT29k": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/demoDFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metadataActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "demoGetMetaData",
						"type": "GetMetadata",
						"state": "Inactive",
						"onInactiveMarkAs": "Skipped",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "srcDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists",
								"columnCount",
								"structure"
							]
						}
					},
					{
						"name": "demoLookUp",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "demoGetMetaData",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "destBLOB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "demoWeb",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://www.imdb.com/chart/top/"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcDS')]",
				"[concat(variables('factoryId'), '/datasets/destBLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destBLOB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destBLOBStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbo.employee.csv",
						"container": "dwtemp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destBLOBStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destSQLTblGT29')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destSQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "eid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "eage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "esalary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IncrementedSalary",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destSnklt29k')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destSQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "eid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "eage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "esalary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IncrementedSalary",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "salarylt29K"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/forGT29K')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destSQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "eid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "eage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "esalary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IncrementedSalary",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "salarygt29K"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/legacyDSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destSQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "eid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "eage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "esalary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IncrementedSalary",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "newemp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "srcSQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "eid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "eage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "esalary",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "newemp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/srcSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcNewSorce')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destBLOBStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbo.employee.csv",
						"container": "dwtemp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "eid",
						"type": "String"
					},
					{
						"name": "ename",
						"type": "String"
					},
					{
						"name": "eage",
						"type": "String"
					},
					{
						"name": "esalary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destBLOBStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblSalgt29k')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destSQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "eid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "eage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "esalary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IncrementedSalary",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "salarygt29K"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destSQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destBLOBStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('destBLOBStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/destSQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('destSQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcSQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('srcSQLDB_properties_typeProperties_server')]",
					"database": "[parameters('srcSQLDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('srcSQLDB_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('srcSQLDB_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demoDFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "srcNewSorce",
								"type": "DatasetReference"
							},
							"name": "srcBLOB"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "forGT29K",
								"type": "DatasetReference"
							},
							"name": "snkGT29k"
						},
						{
							"dataset": {
								"referenceName": "destSnklt29k",
								"type": "DatasetReference"
							},
							"name": "snkLT29k"
						}
					],
					"transformations": [
						{
							"name": "addIncrementColumn"
						},
						{
							"name": "salarygt29k"
						}
					],
					"scriptLines": [
						"source(output(",
						"          eid as integer,",
						"          ename as string,",
						"          eage as integer,",
						"          esalary as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> srcBLOB",
						"srcBLOB derive(Increment = esalary + 10000) ~> addIncrementColumn",
						"addIncrementColumn split(esalary >= 29000,",
						"     esalary < 29000,",
						"     disjoint: true) ~> salarygt29k@(salarygt29ksplit, salarylt29ksplit)",
						"salarygt29k@salarygt29ksplit sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          eid as integer,",
						"          ename as string,",
						"          eage as integer,",
						"          esalary as integer,",
						"          IncrementedSalary as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          eid,",
						"          ename,",
						"          eage,",
						"          esalary,",
						"          IncrementedSalary = Increment",
						"     )) ~> snkGT29k",
						"salarygt29k@salarylt29ksplit sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          eid as integer,",
						"          ename as string,",
						"          eage as integer,",
						"          esalary as integer,",
						"          IncrementedSalary as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          eid,",
						"          ename,",
						"          eage,",
						"          esalary,",
						"          IncrementedSalary = Increment",
						"     )) ~> snkLT29k"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcNewSorce')]",
				"[concat(variables('factoryId'), '/datasets/forGT29K')]",
				"[concat(variables('factoryId'), '/datasets/destSnklt29k')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "copyactivitypipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/dwtemp/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copyactivitypipeline')]"
			]
		}
	]
}